/*! HTML5 Boilerplate v9.0.1 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */


body,html {
  height: 100%
}

body {
  font-family: Segoe UI,Roboto,Helvetica,Arial,serif;
  font-size: inherit;
  display: flex;
  margin: 0;
  flex-direction: column
}

.card {
  width: 300px;
  border: 1px solid #ddd;
  box-shadow: 0 4px 8px rgba(0,0,0,.1);
  flex: 0 1 calc(20% - 1em);
  margin: 1em 0
}

.card img {
  width: 100%;
  height: 180px;
  object-fit: cover
}

.card-content {
  padding: 15px
}

.card-content button {
  border: solid #d3d3d3;
  padding: .5em 1em;
  background-color: #fff;
  border-radius: 5px 5px 5px 5px;
  cursor: pointer
}

.card-content p {
  color: #555;
  margin: 0 0 1em;
  transition: max-height .3s ease
}

.card-content .card-content-date {
  margin: 0;
  font-size: 14px
}

.card-content .card-content-location {
  font-size: 16px
}

.card-holder {
  display: flex;
  margin: 0 1em;
  flex-wrap: wrap;
  justify-content: space-between
}

.Date::before,.Desc::before,.Events::before,.Title::before {
  position: absolute;
  color: #000;
  padding: 5px 5px 5px 10px;
  border-radius: 5px 0 0 5px;
  background-color: silver;
  content: "Event"
}

.Title::before {
  padding: 5px 13px 5px 10px;
  content: "Title"
}

.Desc::before {
  padding: 5px 9px 5px 10px;
  content: "Desc"
}

.Date::before {
  padding: 5px 9px 5px 10px;
  content: "Date"
}

.button-container button {
  margin: 0 .5em 0 0;
  padding: .5em 5em;
  border: solid silver;
  border-radius: 5px 5px 5px 5px;
}

.button-container .clear-btn {
  padding: .5em 3em
}


/*Mobile version*/
@media screen and (max-width:768px) {
  .filter-container,.header {
    display: flex;
    flex-direction: column
  }
  .header {
    justify-content: left;
    background: linear-gradient(90deg,#3e0087 0,#210303 100%);
    padding: 50px 0 10px;
    text-align: left;
    color: #fff
  }
  .header h1 {
    font-size: 60px;
    padding-left: .5em
  }
  .filter-container {
    border: 2px solid gray;
    padding: 1em 1em .5em .5em;
    border-radius: 10px 10px 10px 10px;
    background: #3e0087ff
  }
  .filter-container .Events select,.filter-container input {
    border: solid silver;
    margin: 0 1em .5em 0;
    border-radius: 5px 5px 5px 5px;
    padding: .5em 5em .5em 4em;
    width: 100%;
    justify-content: left
  }
  .button-container {
    display: flex;
  }
  .button-container button {
    width: 100%
  }
  .card {
    width: 300px;
    height: 500px;
    border: 1px solid #ddd;
    box-shadow: 0 4px 8px rgba(0,0,0,.1);
    flex: 1 1 100%;
    margin: 1em 0
  }
}

@media screen and (min-width:768px) {
  .header {
    display: flex;
    justify-content: left;
    flex-direction: column;
    background: linear-gradient(90deg,#3e0087 0,#210303 100%);
    padding: 50px 0 10px;
    text-align: left;
    color: #fff
  }

  .header h1 {
    font-size: 60px;
    padding-left: .5em
  }

  .filter-container {
    border: 2px solid gray;
    padding: 1em 1em .5em .5em;
    border-radius: 10px 10px 10px 10px;
    background: #3e0087ff;
    display: flex
  }

  .filter-container .Events select {
    border: solid silver;
    margin: 0 1em 0 0;
    border-radius: 5px 5px 5px 5px;
    padding: .5em 5em .5em 4em;
    width: 250px;
    justify-content: left
  }

  .button-container button,.filter-container input {
    border: solid silver;
    margin: 0 1em 0 0;
    border-radius: 5px 5px 5px 5px;
    padding: .5em 3em .5em 4em
  }
}














/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

